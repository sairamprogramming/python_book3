Q:1. What is []?

Sol: [] refers to an empty list.

Q:2. How would you assign the value 'hello' as the third value in a list stored in a variable named spam? 
    (Assume spam contains [2, 4, 6, 8, 10].)

Sol: You use the .insert() method of the list data type to insert an item into a list.

     lst = [2, 4, 6, 8, 10]
     lst.insert(2, 'hello')     # This statement inserts 'hello' in the third position of the list.


For the following three questions, let’s say spam contains the list ['a', 'b', 'c', 'd'].

Q:3. What does spam[int(int('3' * 2) // 11)] evaluate to?

Sol: 'd'

Q:4. What does spam[-1] evaluate to?

Sol: 'd'

Q:5. What does spam[:2] evaluate to?

Sol: ['a', 'b']

For the following three questions, let’s say bacon contains the list [3.14, 'cat', 11, 'cat', True].

Q:6. What does bacon.index('cat') evaluate to?

Sol: 1

Q:7. What does bacon.append(99) make the list value in bacon look like?

Sol: [3.14, 'cat', 11, 'cat', True, 99]

Q:8. What does bacon.remove('cat') make the list value in bacon look like?

Sol: [3.14, 11, 'cat', True]

Q:9. What are the operators for list concatenation and list replication?

Sol: List concatenation operator --> +
     List replication operator   --> *

Q:10. What is the difference between the append() and insert() list methods?

Sol: The .append() method inserts an item at the end of the list.

     The .insert() method can insert an item in any position of the list.

Q:11. What are two ways to remove values from a list?

Sol: The two ways to remove an item from the list are:

     1) Using the del statement, this removes the item by using the index of the item.

     2) Using the .remove() method, this removes the first occurance of an item by its value from the list.

Q:12. Name a few ways that list values are similar to string values.

Sol: Lists and Strings are ordered sequences.
     They both follow an index scheme, including negative indices.
     Both support the in and not in boolean operator.


Q:13. What is the difference between lists and tuples?

Sol: Lists are mutable, that is they can be modified in place and therefore support such methods.
     List variables hold refrences to the list.

     Tuples are not immutable and therefore cannot be modified once created.
     Tuple variables holds the values of the tuples directly.

Q:14. How do you type the tuple value that has just the integer value 42 in it?

Sol: (42,)

Q:15. How can you get the tuple form of a list value? How can you get the list form of a tuple value?

Sol: Converting tuple to list --> list(tuple_variable)
     Converting list to tuple --> tuple(list_variable)

Q:16. Variables that “contain” list values don’t actually contain lists directly. What do they contain instead?

Sol: They contain the reference to the list.

Q:17. What is the difference between copy.copy() and copy.deepcopy()?

Sol: A (copy.copy()) shallow copy constructs a new compound object and then (to the extent possible) 
     inserts references into it to the objects found in the original.

     A (copy.deepcopy()) deep copy constructs a new compound object and then, recursively, inserts copies 
     into it of the objects found in the original.
